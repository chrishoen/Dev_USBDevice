#pragma once

/*==============================================================================
Command executive.
==============================================================================*/

//******************************************************************************
//******************************************************************************
//******************************************************************************

namespace Some
{

//******************************************************************************
//******************************************************************************
//******************************************************************************
// This class provides a command executive. It processes commands
// contained in an input receive string and formulates a response
// that is contained in an output transmit string.

class CmdExec
{
public:

   //***************************************************************************
   //***************************************************************************
   //***************************************************************************
   // Constants.

   // String size.
   static const int cMaxStringSize = 128;

   //***************************************************************************
   //***************************************************************************
   //***************************************************************************
   // Members.

   // True if the received string is valid.
   bool mRxValid;

   // Number of bytes received.
   int mRxLength;

   // Received string buffer.
   char mRxBuffer[cMaxStringSize];

   //***************************************************************************
   //***************************************************************************
   //***************************************************************************
   // Members.

   // True if the transmit string is valid.
   bool mTxValid;

   // Number of bytes to transmit.
   int mTxLength;

   // Received string buffer.
   char mTxBuffer[cMaxStringSize];

   //***************************************************************************
   //***************************************************************************
   //***************************************************************************
   // Methods.

   // Constructor.
   CmdExec();
   void reset();

   //***************************************************************************
   //***************************************************************************
   //***************************************************************************
   // Methods.

   // Process the input command contained in the receive string
   // and place a response in the transmit string.
   void doProcess();
};

//******************************************************************************
//******************************************************************************
//******************************************************************************
}//namespace

//******************************************************************************
//******************************************************************************
//******************************************************************************


