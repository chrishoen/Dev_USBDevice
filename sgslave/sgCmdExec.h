#pragma once

/*==============================================================================
Command executive.
==============================================================================*/

//******************************************************************************
//******************************************************************************
//******************************************************************************

namespace SG
{

//******************************************************************************
//******************************************************************************
//******************************************************************************
// This class provides a command executive. It processes commands
// contained in an input receive buffer and formulates a response
// that is contained in an output transmit buffer.

class CmdExec
{
public:

   //***************************************************************************
   //***************************************************************************
   //***************************************************************************
   // Constants.

   // String size.
   static const int cMaxBufferSize = 2048;

   //***************************************************************************
   //***************************************************************************
   //***************************************************************************
   // Members.

   // Metrics.
   int mTxCount;

   //***************************************************************************
   //***************************************************************************
   //***************************************************************************
   // Methods.

   // Constructor.
   CmdExec();
   void reset();

   //***************************************************************************
   //***************************************************************************
   //***************************************************************************
   // Methods.

   // Process the input command contained in the receive buffer
   // and place a response in the transmit buffer.
   void doProcess(
      char* aRxBuffer,      // Input
      int   aRxLength,      // Input
      char* aTxBuffer,      // Output
      int*  aTxLength);     // Output

};

//******************************************************************************
//******************************************************************************
//******************************************************************************
}//namespace

//******************************************************************************
//******************************************************************************
//******************************************************************************


